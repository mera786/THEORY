                               SPRING BOOT QUEZ
(1) Core Concepts (DI, IoC, Beans, MVC) :
                       Q1. What is Dependency Injection (DI) in Spring Boot?
                       Q2. Why use DI?
                       Q3. What is Spring IoC?
                       Q4. Difference Between BeanFactory and ApplicationContext ?
                       Q5. Explain Bean life cycle?
                       Q6. What is Spring MVC?
                       Q7. Explain technical flow of Spring Boot project?
                       Q8. How will you use external library in Spring Boot project?
                       Q9. How many ways to do dependency injection?
                       Q10. Explain difference between constructor injection vs setter injection?
                       Q11. Explain scope of Bean in Spring?
                       Q12. Difference between @Autowired vs new keyword?
(2) Basics of Spring Boot :
                        Q1. What is Spring Boot?
                        Q2. What are the main features of Spring Boot?
                        Q3. What is the difference between Spring and Spring Boot?
                        Q4. What are Spring Boot Starters?
                        Q5. How do you create a Spring Boot project?
                        Q6. Explain working of Spring Boot?
                        Q7. What are spring-boot-starter-parent?
                        Q8. What are the key dependencies of Spring Boot?
                        Q9. What are the different modules in Spring?
                        Q10. Explain difference between Spring Boot vs Spring Cloud?
                        Q11. How many requests can a Spring Boot project handle simultaneously?
                        Q12. Can we override or replace the embedded Tomcat server in Spring Boot?
                        Q13. Can we disable the default web server in the Spring Boot application?
                        Q14. How to disable a specific auto-configuration class?
                        Q15. What is Web Services?
                        Q16. Can we create a RESTful API without using @RestController annotation?
                        Q17. How can we override default properties in Spring Boot?
(3) Configuration :
                        Q1. How does Spring Boot handle configuration?
                        Q2. What is the difference between application.properties and application.yml?
                        Q3. How can you change the default port in Spring Boot?
                        Q4. Is it possible to change the port of embedded Tomcat server in Spring Boot?
                        Q5. What is the use of Profiles in Spring Boot?
(4) REST & Controllers  :
                        Q1. How do you create a REST API in Spring Boot?
                        Q2. Difference between POST vs PUT method?
                        Q3. Difference between GET and POST?
                        Q4. Difference between PUT and PATCH?
                        Q5. What is HTTP status code & categories of HTTP codes?
                        Q6. How many types of HTTP methods?
                        Q7. What are HTTP Headers?
                        Q8. Difference between Query Parameter vs Path Parameter?
(5) JPA & Database  :
                        Q1. How do you connect Spring Boot to a database?
                        Q2. What is the role of Repository in spring boot?
                        Q3. What is the difference between CrudRepository and JpaRepository?
                        Q4. How do you define a custom query in Spring Boot JPA?
                        Q5. How JpaRepository object is created in Spring Boot even if it is an interface?
                        Q6. How do you implement pagination in Spring Boot JPA?
(6) Monitoring & Management :
                        Q1. What is Spring Boot Actuator?
                        Q2. What are the key endpoints provided by Spring Boot Actuator?
                        Q3. HOW WILL YOU CUSTOMIZE THE MANAGEMENT SERVER PORT FOR ACTUATOR?
                        Q4. How do you change the default /actuator base path for Spring Boot Actuator endpoints?
                        Q5. How do you enable/disable specific Actuator endpoints in Spring Boot?
                        Q6. How do you secure Actuator endpoints in Spring Boot?
                        Q7. How will you expose your custom endpoints in Spring Actuator?
                        Q8. What is HTTP Trace in Spring Boot?
                        Q9. How can Actuator integrate with tools like Prometheus and Grafana?
(7)  Security :
                        Q1. How do you secure a Spring Boot application?
                        Q2. What is the difference between Authentication and Authorization?
                        Q3. How do you configure custom user details in Spring Security?
                        Q4. What is the role of UserDetailsService in Spring Security?
                        Q5. How do you store passwords securely in a Spring Boot app?
                        Q6. What is a SecurityFilterChain and how do you configure it in Spring Boot?
                        Q7. How do you secure REST APIs in Spring Boot?
                        Q8. How can you restrict access to specific endpoints in Spring Boot?
                        Q9. Explain Spring Security internal flow?
(8) JWT   :
                        Q1. What is JWT?
                        Q2. What are the parts of a JWT?
                        Q3. What is the difference between JWT and session-based authentication?
                        Q4. What are claims in JWT?
                        Q5. How does JWT work in a Spring Boot application?
                        Q6. How do you generate a JWT in Java?
                        Q7. How do you validate a JWT?
                        Q8. Where do you store JWT on the client side?
                        Q9. How do you send JWT in API requests?
                        Q10. How do you secure REST APIs using JWT in Spring Boot?
                        Q11. What is the difference between access token and refresh token?
                        Q12. How do you include user roles in JWT and check them in Spring Security?
                        Q13. How do you handle token expiration?
                        Q14. What libraries are commonly used for JWT in Java/Spring Boot?
                        Q15. How do you refresh JWT tokens?
                        Q16. How do you implement JWT filter in Spring Boot?
                        Q17. How do you test JWT-secured APIs?
(9) ANNOTATIONS :
                         Q1. What is @SpringBootApplication?
                         Q2. What is @Component?
                         Q3. What is @Service?
                         Q4. What is @Repository?
                         Q5. What is @Controller?
                         Q6. What is @RestController?
                         Q7. What is @Autowired?
                         Q8. What is @Qualifier?
                         Q9. What is @Value?
                         Q10. What is @Configuration?
                         Q11. What is @Bean?
                         Q12. What is @EnableAutoConfiguration?
                         Q13. What is @ComponentScan?
                         Q14. What is @RequestMapping?
                         Q15. What is @GetMapping?
                         Q16. What is @PostMapping?
                         Q17. What is @PutMapping?
                         Q18. What is @DeleteMapping?
                         Q19. What is @PathVariable?
                         Q20. What is @RequestParam?
                         Q21. What is @RequestBody?
                         Q22. What is @ResponseBody?
                         Q23. What is @CrossOrigin?
                         Q24. What is @Entity?
                         Q25. What is @Table?
                         Q26. What is @Id?
                         Q27. What is @GeneratedValue?
                         Q28. What is @Column?
                         Q29. What is @OneToOne?
                         Q30. What is @OneToMany?
                         Q31. What is @ManyToOne?
                         Q32. What is @ManyToMany?
                         Q33. What is @JoinColumn?
                         Q34. What is @Transactional?
                         Q35. What is @EnableScheduling?
                         Q36. What is @Scheduled?
                         Q37. What is @ConfigurationProperties?
                         Q38. What is @ConditionalOnProperty?
                         Q39. What is @RestControllerAdvice?
                         Q40. What is @ExceptionHandler?
                         Q41. What is @Profile?

