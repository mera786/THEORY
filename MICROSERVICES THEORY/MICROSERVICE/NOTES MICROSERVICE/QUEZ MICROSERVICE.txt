(1) What are Microservices?
(2) Why Use Spring Boot for Microservices?
(3) Advantages of Microservices ?
(4) DisAdvantages of Microservices ?
(5) What is key principle of microservices?
(6) Explain Microservices Architecture Components?
(7) What is the difference between a monolithic application and a microservices architecture?
(8) How do microservices communicate with each other?
(9) In monolithic apps you just need a server and DB, what extra things are required in microservices?
(9.1) What is the difference between RestTemplate, Feign Client and WebClient ?
(10) Service Discovery (Eureka, Consul) :
                              Q1. What is service discovery in microservices?
                              Q2. Why do we need service discovery?
                              Q3. Example of a service discovery tool?
                              Q4. How does Eureka handle service failures?
                              Q5. What is Eureka self-preservation mode?
                              Q6. What is the difference between client-side load balancing and server-side load balancing in the context of a service discovery server?
(11) Config Server (Spring Cloud Config) :
                                      Q1. Q1. What is the use of a Config Server?
                                      Q2. Where can Spring Cloud Config store its configuration files?
                                      Q3. Why is centralized configuration important?
                                      Q4. How do microservices refresh configuration at runtime?
                                      Q5. How would you secure sensitive configs like DB password in Config Server?
                                      Q6. What problem could occur if Config Server is down? How to solve it?
(12) API Gateway (Spring Cloud Gateway, Zuul, Kong, Nginx) :
                                      Q1. What is an API Gateway?
                                      Q2. Why do we need an API Gateway?
                                      Q3. Example of API Gateway tools?
                                      Q4. How does API Gateway handle authentication?
                                      Q5. Can API Gateway handle limiting?
                                      Q6. Difference between Zuul and Spring Cloud Gateway?
                                      Q7. What challenges can arise if API Gateway goes down?
                                      Q8. What is routing in API Gateway?
                                      Q9. What is path rewriting in API Gateway?
                                      Q10. What is the difference between routing and path rewriting?
                                      Q11. What are some use cases of path rewriting?
                                      Q12. Can you give an example of API versioning with path rewriting?
                                      Q13. What are predicates in routing?
                                      Q14. What are filters in routing?
                                      Q15. How do you debug if a route is not working as expected?
                                      Q16. What happens if two routes match the same request?
                                      Q17. How do you handle fallback routes in case a service is down?
                                      Q18. Can you combine load balancing with routing and rewriting?
                                      Q19. What are the performance considerations of path rewriting?
                                      Q20. Give an example from your project where you used path rewriting.
                                      Q21. How does the API Gateway decide which microservice should handle a particular request?
(13) Admin Server (Spring Boot Admin) :
                                      Q1. What is Spring Boot Admin?
                                      Q2. What kind of info does it show?
                                      Q3. How do services connect to Admin Server?
                                      Q4. How does Spring Boot Admin work internally?
                                      Q5. How do you secure Admin Server in production?
                                      Q6. If Admin Server is down, how will you still monitor services?
(14) Zipkin Server (Distributed Tracing) :
                                      Q1. What is Zipkin?
                                      Q2. Why do we need distributed tracing?
                                      Q3. How do services send trace info to Zipkin?
                                      Q4. Difference between logging and tracing?
                                      Q5. What backends can Zipkin use for storing traces?
                                      Q6. Have you faced performance issues with tracing?
(15). Fault Tolerance (Resilience4j, Hystrix, Circuit Breaker) :
                                      Q1. What is fault tolerance?
                                      Q2. What is a Circuit Breaker pattern?
                                      Q3. Example of a fault tolerance library?
                                      Q4. What is the difference between Retry and Circuit Breaker?
                                      Q5. How do you implement fallback in case a service is down?
                                      Q6. How do you handle rate limiting in microservices?
                                      Q7. Can you explain a real issue where fault tolerance saved your system?
                                      Q8. What is the difference between Hystrix and Resilience4j?
                                      Q9. What is Bulkhead pattern?
                                      Q10. What is the Timeout pattern and why is it important?
                                      Q11. In terms of fault tolerance, what is the difference between Fail-Fast and Fail-Safe?
                                      Q12. How do you monitor Circuit Breakers in production?
                                      Q13. What is the Saga Pattern in microservices?
                                      Q14. What are the two ways to implement Saga?
                                      Q15. Can you give a real example of Saga?
                                      Q16. Difference between 2PC (Two-Phase Commit) and Saga?
                                      Q17. How does Saga help in fault tolerance?
                                      Q18. Why do we need a Circuit Breaker if we already have Saga?
                                      Q19. How do you decide between Retry, Circuit Breaker, and Saga?
                                      Q20. What tools can you use to implement Saga in Spring Boot?
                                      Q21. Can Saga work with Resilience4j/Hystrix?




(5) Steps to Create Eureka Server / Service Registry?

(7) Step to Set Up Spring Boot Admin Server?

(9) Step to setup Zipikin Server?


(13) Step to implement API gateway?

(14) STEPS TO IMPLEMENTS Spring Cloud Config Server?

(15) How to secure microservice prject?




